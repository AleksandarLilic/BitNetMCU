// Automatically generated header file
// Date: 2024-04-20 15:10:54.985768
// Quantized model exported from pdk_Cosine_lr0.001_BitMnist_PerTensor_2bitsym_RMS_width16_16_16_bs128_epochs60.pth
// Generated by exportquant.py

#include <stdint.h>

#ifndef BITNETMCU_MODEL_H
#define BITNETMCU_MODEL_H

// Number of layers
#define NUM_LAYERS 4

// Maximum number of activations per layer
#define MAX_N_ACTIVATIONS 16

// Layer: L1
// QuantType: 2bitsym
#define L1_active
#define L1_bitperweight 2
#define L1_incoming_weights 64
#define L1_outgoing_weights 16
const uint8_t L1_weights[] = {0x8, 0x10, 0x8b, 0x84, 0xab, 0xe9, 0x95, 0x24, 0x8c, 0x22, 0xa1, 0xa, 0xb8, 0x5a, 0xaf, 0xfa, 0xaf, 0xaa, 0xa7, 0xc0, 0x95, 0x14, 0xaf, 0xfe, 0xbe, 0xb8, 0x88, 0x15, 0x94, 0x54, 0xa1, 0x6a, 0xa, 0xe0, 0x38, 0x61, 0xb0, 0x81, 0x85, 0xc0, 0xa9, 0x2e, 0xa5, 0xba, 0x3c, 0x14, 0xaa, 0x46, 0xa2, 0x22, 0x2e, 0x52, 0x20, 0x93, 0x8b, 0x16, 0x29, 0x6c, 0xb4, 0xf0, 0x92, 0x82, 0xa1, 0x0, 0xa, 0x0, 0x2b, 0xfa, 0xf, 0x55, 0x59, 0x4d, 0xf, 0x8e, 0x91, 0x2e, 0xa0, 0xfc, 0x8a, 0x8, 0x2, 0x22, 0x3, 0xba, 0x15, 0x4e, 0x42, 0x52, 0x2b, 0x12, 0xbd, 0xbe, 0xbe, 0xbc, 0x94, 0x52, 0xa0, 0x40, 0x3, 0xf0, 0x3, 0xcb, 0x21, 0xb, 0x14, 0x54, 0x28, 0x6c, 0x3f, 0xfc, 0x13, 0xea, 0xb, 0xe8, 0x8a, 0x82, 0xa8, 0x50, 0x17, 0x8b, 0x15, 0x4f, 0xbf, 0xaa, 0xaf, 0xc2, 0x15, 0x42, 0xa8, 0x2a, 0x85, 0x2e, 0x10, 0x56, 0x3e, 0x6, 0x29, 0xae, 0x16, 0x92, 0x18, 0xaa, 0xa1, 0x4a, 0x2a, 0xf2, 0x2a, 0xa, 0xa9, 0x52, 0x15, 0xe4, 0x87, 0xf2, 0xb7, 0xe8, 0x80, 0x28, 0xa8, 0x12, 0x5, 0x54, 0xa0, 0x4a, 0x2e, 0xbf, 0x2a, 0x86, 0xa1, 0xc8, 0x25, 0x15, 0x1, 0xa8, 0xaf, 0xf8, 0x0, 0x20, 0x28, 0x2c, 0x1, 0x3c, 0xf, 0x78, 0x3c, 0x31, 0x2d, 0x20, 0x22, 0x10, 0xb, 0xc0, 0x2, 0xaa, 0x20, 0xaa, 0xbf, 0x8, 0x3f, 0xbc, 0x95, 0x31, 0x95, 0x95, 0xb, 0xe0, 0x2f, 0xf8, 0x8, 0x2a, 0x94, 0xbc, 0x9b, 0x4f, 0xb9, 0x6e, 0x3c, 0x34, 0x1f, 0x84, 0x14, 0x1e, 0x0, 0xa0, 0xa8, 0xa, 0x9, 0x54, 0xa0, 0xb9, 0xa9, 0x6f, 0x3e, 0x82, 0x1f, 0x6, 0x5, 0x2a, 0x84, 0x2a, 0xa8, 0xa8, 0xa1, 0x4e, 0x2f, 0x52, 0x3f, 0xda, 0x13, 0xde, 0x11, 0x8, 0x1, 0x14, 0xb, 0xa0};
//first channel is topmost bit

// Layer: L2
// QuantType: 2bitsym
#define L2_active
#define L2_bitperweight 2
#define L2_incoming_weights 16
#define L2_outgoing_weights 16
const uint8_t L2_weights[] = {0x62, 0xe6, 0xa6, 0x8b, 0x17, 0x78, 0x83, 0x37, 0x30, 0xab, 0x5a, 0xe9, 0x8e, 0x58, 0x1e, 0xae, 0x20, 0x8d, 0x4e, 0xc6, 0x10, 0xfc, 0x20, 0x80, 0x38, 0x6e, 0xa9, 0x52, 0x92, 0xc7, 0x4, 0x7d, 0x8e, 0x20, 0x7b, 0x95, 0xd9, 0xc2, 0x31, 0x49, 0x3, 0x70, 0x9b, 0x24, 0xb0, 0x10, 0x8e, 0xc1, 0x4b, 0x3, 0x95, 0xfa, 0x41, 0xe, 0x29, 0xab, 0x70, 0xa5, 0xae, 0x88, 0x8e, 0xa7, 0x98, 0x38};
//first channel is topmost bit

// Layer: L3
// QuantType: 2bitsym
#define L3_active
#define L3_bitperweight 2
#define L3_incoming_weights 16
#define L3_outgoing_weights 16
const uint8_t L3_weights[] = {0xe9, 0x81, 0x9e, 0x8a, 0x32, 0x4c, 0x53, 0xca, 0xe8, 0x68, 0x9d, 0xeb, 0x1c, 0xb, 0x7, 0xab, 0x76, 0xa0, 0x70, 0x6c, 0xb3, 0x83, 0x52, 0x62, 0x94, 0x48, 0x36, 0x12, 0x12, 0x85, 0x3, 0x6c, 0x4b, 0xc9, 0x10, 0xa4, 0xe6, 0x89, 0xc9, 0x21, 0xb9, 0x6, 0x50, 0x4f, 0x49, 0x3c, 0x80, 0x53, 0xbe, 0x37, 0xac, 0x17, 0xa, 0x60, 0x61, 0xf7, 0xf5, 0xa8, 0x84, 0x61, 0x67, 0x42, 0xae, 0x18};
//first channel is topmost bit

// Layer: L4
// QuantType: 2bitsym
#define L4_active
#define L4_bitperweight 2
#define L4_incoming_weights 16
#define L4_outgoing_weights 10
const uint8_t L4_weights[] = {0xeb, 0x70, 0xdf, 0xb6, 0x7e, 0x88, 0xb3, 0x6c, 0x5f, 0x8a, 0x5a, 0xea, 0x90, 0x5b, 0xe2, 0xca, 0xef, 0xab, 0x48, 0x1a, 0xe9, 0xa4, 0xba, 0xcb, 0xfe, 0x79, 0x2c, 0xfc, 0x27, 0xcb, 0xa1, 0xe7, 0x8a, 0xa7, 0xaa, 0xed, 0xe7, 0xa3, 0xca, 0x12};
//first channel is topmost bit

#endif
